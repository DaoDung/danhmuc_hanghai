/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.result.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the TempDebitNote service. Represents a row in the &quot;temp_debitnote&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.result.model.impl.TempDebitNoteModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.result.model.impl.TempDebitNoteImpl}.
 * </p>
 *
 * @author win_64
 * @see TempDebitNote
 * @see vn.gt.dao.result.model.impl.TempDebitNoteImpl
 * @see vn.gt.dao.result.model.impl.TempDebitNoteModelImpl
 * @generated
 */
public interface TempDebitNoteModel extends BaseModel<TempDebitNote> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a temp debit note model instance should use the {@link TempDebitNote} interface instead.
	 */

	/**
	 * Returns the primary key of this temp debit note.
	 *
	 * @return the primary key of this temp debit note
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this temp debit note.
	 *
	 * @param primaryKey the primary key of this temp debit note
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this temp debit note.
	 *
	 * @return the ID of this temp debit note
	 */
	public long getId();

	/**
	 * Sets the ID of this temp debit note.
	 *
	 * @param id the ID of this temp debit note
	 */
	public void setId(long id);

	/**
	 * Returns the a t t a c h e d f i l e of this temp debit note.
	 *
	 * @return the a t t a c h e d f i l e of this temp debit note
	 */
	public long getATTACHEDFILE();

	/**
	 * Sets the a t t a c h e d f i l e of this temp debit note.
	 *
	 * @param ATTACHEDFILE the a t t a c h e d f i l e of this temp debit note
	 */
	public void setATTACHEDFILE(long ATTACHEDFILE);

	/**
	 * Returns the corporationid of this temp debit note.
	 *
	 * @return the corporationid of this temp debit note
	 */
	@AutoEscape
	public String getCorporationid();

	/**
	 * Sets the corporationid of this temp debit note.
	 *
	 * @param corporationid the corporationid of this temp debit note
	 */
	public void setCorporationid(String corporationid);

	/**
	 * Returns the debitnotenumber of this temp debit note.
	 *
	 * @return the debitnotenumber of this temp debit note
	 */
	@AutoEscape
	public String getDebitnotenumber();

	/**
	 * Sets the debitnotenumber of this temp debit note.
	 *
	 * @param debitnotenumber the debitnotenumber of this temp debit note
	 */
	public void setDebitnotenumber(String debitnotenumber);

	/**
	 * Returns the division of this temp debit note.
	 *
	 * @return the division of this temp debit note
	 */
	@AutoEscape
	public String getDivision();

	/**
	 * Sets the division of this temp debit note.
	 *
	 * @param division the division of this temp debit note
	 */
	public void setDivision(String division);

	/**
	 * Returns the document name of this temp debit note.
	 *
	 * @return the document name of this temp debit note
	 */
	public long getDocumentName();

	/**
	 * Sets the document name of this temp debit note.
	 *
	 * @param documentName the document name of this temp debit note
	 */
	public void setDocumentName(long documentName);

	/**
	 * Returns the document year of this temp debit note.
	 *
	 * @return the document year of this temp debit note
	 */
	public int getDocumentYear();

	/**
	 * Sets the document year of this temp debit note.
	 *
	 * @param documentYear the document year of this temp debit note
	 */
	public void setDocumentYear(int documentYear);

	/**
	 * Returns the financialaccountant of this temp debit note.
	 *
	 * @return the financialaccountant of this temp debit note
	 */
	@AutoEscape
	public String getFinancialaccountant();

	/**
	 * Sets the financialaccountant of this temp debit note.
	 *
	 * @param financialaccountant the financialaccountant of this temp debit note
	 */
	public void setFinancialaccountant(String financialaccountant);

	/**
	 * Returns the fromdate of this temp debit note.
	 *
	 * @return the fromdate of this temp debit note
	 */
	public Date getFromdate();

	/**
	 * Sets the fromdate of this temp debit note.
	 *
	 * @param fromdate the fromdate of this temp debit note
	 */
	public void setFromdate(Date fromdate);

	/**
	 * Returns the markasdeleted of this temp debit note.
	 *
	 * @return the markasdeleted of this temp debit note
	 */
	public int getMarkasdeleted();

	/**
	 * Sets the markasdeleted of this temp debit note.
	 *
	 * @param markasdeleted the markasdeleted of this temp debit note
	 */
	public void setMarkasdeleted(int markasdeleted);

	/**
	 * Returns the organization of this temp debit note.
	 *
	 * @return the organization of this temp debit note
	 */
	@AutoEscape
	public String getOrganization();

	/**
	 * Sets the organization of this temp debit note.
	 *
	 * @param organization the organization of this temp debit note
	 */
	public void setOrganization(String organization);

	/**
	 * Returns the paymenttype of this temp debit note.
	 *
	 * @return the paymenttype of this temp debit note
	 */
	public int getPaymenttype();

	/**
	 * Sets the paymenttype of this temp debit note.
	 *
	 * @param paymenttype the paymenttype of this temp debit note
	 */
	public void setPaymenttype(int paymenttype);

	/**
	 * Returns the reportby of this temp debit note.
	 *
	 * @return the reportby of this temp debit note
	 */
	@AutoEscape
	public String getReportby();

	/**
	 * Sets the reportby of this temp debit note.
	 *
	 * @param reportby the reportby of this temp debit note
	 */
	public void setReportby(String reportby);

	/**
	 * Returns the reportdate of this temp debit note.
	 *
	 * @return the reportdate of this temp debit note
	 */
	public Date getReportdate();

	/**
	 * Sets the reportdate of this temp debit note.
	 *
	 * @param reportdate the reportdate of this temp debit note
	 */
	public void setReportdate(Date reportdate);

	/**
	 * Returns the todate of this temp debit note.
	 *
	 * @return the todate of this temp debit note
	 */
	public Date getTodate();

	/**
	 * Sets the todate of this temp debit note.
	 *
	 * @param todate the todate of this temp debit note
	 */
	public void setTodate(Date todate);

	/**
	 * Returns the totalpayment of this temp debit note.
	 *
	 * @return the totalpayment of this temp debit note
	 */
	public double getTotalpayment();

	/**
	 * Sets the totalpayment of this temp debit note.
	 *
	 * @param totalpayment the totalpayment of this temp debit note
	 */
	public void setTotalpayment(double totalpayment);

	/**
	 * Returns the transactionid of this temp debit note.
	 *
	 * @return the transactionid of this temp debit note
	 */
	@AutoEscape
	public String getTransactionid();

	/**
	 * Sets the transactionid of this temp debit note.
	 *
	 * @param transactionid the transactionid of this temp debit note
	 */
	public void setTransactionid(String transactionid);

	/**
	 * Returns the mari time code of this temp debit note.
	 *
	 * @return the mari time code of this temp debit note
	 */
	public int getMariTimeCode();

	/**
	 * Sets the mari time code of this temp debit note.
	 *
	 * @param mariTimeCode the mari time code of this temp debit note
	 */
	public void setMariTimeCode(int mariTimeCode);

	/**
	 * Returns the comments of this temp debit note.
	 *
	 * @return the comments of this temp debit note
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this temp debit note.
	 *
	 * @param comments the comments of this temp debit note
	 */
	public void setComments(String comments);

	/**
	 * Returns the document type code of this temp debit note.
	 *
	 * @return the document type code of this temp debit note
	 */
	@AutoEscape
	public String getDocumentTypeCode();

	/**
	 * Sets the document type code of this temp debit note.
	 *
	 * @param documentTypeCode the document type code of this temp debit note
	 */
	public void setDocumentTypeCode(String documentTypeCode);

	/**
	 * Returns the keypay good code of this temp debit note.
	 *
	 * @return the keypay good code of this temp debit note
	 */
	@AutoEscape
	public String getKeypayGoodCode();

	/**
	 * Sets the keypay good code of this temp debit note.
	 *
	 * @param keypayGoodCode the keypay good code of this temp debit note
	 */
	public void setKeypayGoodCode(String keypayGoodCode);

	/**
	 * Returns the keypay merchant code of this temp debit note.
	 *
	 * @return the keypay merchant code of this temp debit note
	 */
	@AutoEscape
	public String getKeypayMerchantCode();

	/**
	 * Sets the keypay merchant code of this temp debit note.
	 *
	 * @param keypayMerchantCode the keypay merchant code of this temp debit note
	 */
	public void setKeypayMerchantCode(String keypayMerchantCode);

	/**
	 * Returns the payment gate status code of this temp debit note.
	 *
	 * @return the payment gate status code of this temp debit note
	 */
	@AutoEscape
	public String getPaymentGateStatusCode();

	/**
	 * Sets the payment gate status code of this temp debit note.
	 *
	 * @param paymentGateStatusCode the payment gate status code of this temp debit note
	 */
	public void setPaymentGateStatusCode(String paymentGateStatusCode);

	/**
	 * Returns the payment gate response data of this temp debit note.
	 *
	 * @return the payment gate response data of this temp debit note
	 */
	@AutoEscape
	public String getPaymentGateResponseData();

	/**
	 * Sets the payment gate response data of this temp debit note.
	 *
	 * @param paymentGateResponseData the payment gate response data of this temp debit note
	 */
	public void setPaymentGateResponseData(String paymentGateResponseData);

	/**
	 * Returns the payment gate check code of this temp debit note.
	 *
	 * @return the payment gate check code of this temp debit note
	 */
	public int getPaymentGateCheckCode();

	/**
	 * Sets the payment gate check code of this temp debit note.
	 *
	 * @param paymentGateCheckCode the payment gate check code of this temp debit note
	 */
	public void setPaymentGateCheckCode(int paymentGateCheckCode);

	/**
	 * Returns the payment gate check response data of this temp debit note.
	 *
	 * @return the payment gate check response data of this temp debit note
	 */
	@AutoEscape
	public String getPaymentGateCheckResponseData();

	/**
	 * Sets the payment gate check response data of this temp debit note.
	 *
	 * @param paymentGateCheckResponseData the payment gate check response data of this temp debit note
	 */
	public void setPaymentGateCheckResponseData(
		String paymentGateCheckResponseData);

	/**
	 * Returns the keypay u r l of this temp debit note.
	 *
	 * @return the keypay u r l of this temp debit note
	 */
	@AutoEscape
	public String getKeypayURL();

	/**
	 * Sets the keypay u r l of this temp debit note.
	 *
	 * @param keypayURL the keypay u r l of this temp debit note
	 */
	public void setKeypayURL(String keypayURL);

	/**
	 * Returns the currency of this temp debit note.
	 *
	 * @return the currency of this temp debit note
	 */
	@AutoEscape
	public String getCurrency();

	/**
	 * Sets the currency of this temp debit note.
	 *
	 * @param currency the currency of this temp debit note
	 */
	public void setCurrency(String currency);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(TempDebitNote tempDebitNote);

	public int hashCode();

	public CacheModel<TempDebitNote> toCacheModel();

	public TempDebitNote toEscapedModel();

	public String toString();

	public String toXmlString();
}