/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.noticeandmessage.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the TempMaritimePaymentConfig service. Represents a row in the &quot;TEMP_MARITIME_PAYMENT_CONFIG&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.gt.dao.noticeandmessage.model.impl.TempMaritimePaymentConfigModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.gt.dao.noticeandmessage.model.impl.TempMaritimePaymentConfigImpl}.
 * </p>
 *
 * @author win_64
 * @see TempMaritimePaymentConfig
 * @see vn.gt.dao.noticeandmessage.model.impl.TempMaritimePaymentConfigImpl
 * @see vn.gt.dao.noticeandmessage.model.impl.TempMaritimePaymentConfigModelImpl
 * @generated
 */
public interface TempMaritimePaymentConfigModel extends BaseModel<TempMaritimePaymentConfig> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a temp maritime payment config model instance should use the {@link TempMaritimePaymentConfig} interface instead.
	 */

	/**
	 * Returns the primary key of this temp maritime payment config.
	 *
	 * @return the primary key of this temp maritime payment config
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this temp maritime payment config.
	 *
	 * @param primaryKey the primary key of this temp maritime payment config
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this temp maritime payment config.
	 *
	 * @return the ID of this temp maritime payment config
	 */
	public long getId();

	/**
	 * Sets the ID of this temp maritime payment config.
	 *
	 * @param id the ID of this temp maritime payment config
	 */
	public void setId(long id);

	/**
	 * Returns the maritime code of this temp maritime payment config.
	 *
	 * @return the maritime code of this temp maritime payment config
	 */
	@AutoEscape
	public String getMaritimeCode();

	/**
	 * Sets the maritime code of this temp maritime payment config.
	 *
	 * @param maritimeCode the maritime code of this temp maritime payment config
	 */
	public void setMaritimeCode(String maritimeCode);

	/**
	 * Returns the merchant code of this temp maritime payment config.
	 *
	 * @return the merchant code of this temp maritime payment config
	 */
	@AutoEscape
	public String getMerchantCode();

	/**
	 * Sets the merchant code of this temp maritime payment config.
	 *
	 * @param merchantCode the merchant code of this temp maritime payment config
	 */
	public void setMerchantCode(String merchantCode);

	/**
	 * Returns the merchant key of this temp maritime payment config.
	 *
	 * @return the merchant key of this temp maritime payment config
	 */
	@AutoEscape
	public String getMerchantKey();

	/**
	 * Sets the merchant key of this temp maritime payment config.
	 *
	 * @param merchantKey the merchant key of this temp maritime payment config
	 */
	public void setMerchantKey(String merchantKey);

	/**
	 * Returns the merchant name of this temp maritime payment config.
	 *
	 * @return the merchant name of this temp maritime payment config
	 */
	@AutoEscape
	public String getMerchantName();

	/**
	 * Sets the merchant name of this temp maritime payment config.
	 *
	 * @param merchantName the merchant name of this temp maritime payment config
	 */
	public void setMerchantName(String merchantName);

	/**
	 * Returns the keypay domain of this temp maritime payment config.
	 *
	 * @return the keypay domain of this temp maritime payment config
	 */
	@AutoEscape
	public String getKeypayDomain();

	/**
	 * Sets the keypay domain of this temp maritime payment config.
	 *
	 * @param keypayDomain the keypay domain of this temp maritime payment config
	 */
	public void setKeypayDomain(String keypayDomain);

	/**
	 * Returns the keypay version of this temp maritime payment config.
	 *
	 * @return the keypay version of this temp maritime payment config
	 */
	@AutoEscape
	public String getKeypayVersion();

	/**
	 * Sets the keypay version of this temp maritime payment config.
	 *
	 * @param keypayVersion the keypay version of this temp maritime payment config
	 */
	public void setKeypayVersion(String keypayVersion);

	/**
	 * Returns the return u r l of this temp maritime payment config.
	 *
	 * @return the return u r l of this temp maritime payment config
	 */
	@AutoEscape
	public String getReturnURL();

	/**
	 * Sets the return u r l of this temp maritime payment config.
	 *
	 * @param returnURL the return u r l of this temp maritime payment config
	 */
	public void setReturnURL(String returnURL);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(TempMaritimePaymentConfig tempMaritimePaymentConfig);

	public int hashCode();

	public CacheModel<TempMaritimePaymentConfig> toCacheModel();

	public TempMaritimePaymentConfig toEscapedModel();

	public String toString();

	public String toXmlString();
}