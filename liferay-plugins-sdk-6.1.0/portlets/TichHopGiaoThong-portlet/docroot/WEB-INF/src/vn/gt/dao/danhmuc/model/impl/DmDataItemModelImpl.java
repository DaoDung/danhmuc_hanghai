/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.gt.dao.danhmuc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.gt.dao.danhmuc.model.DmDataItem;
import vn.gt.dao.danhmuc.model.DmDataItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the DmDataItem service. Represents a row in the &quot;dm_dataitem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.gt.dao.danhmuc.model.DmDataItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DmDataItemImpl}.
 * </p>
 *
 * @author win_64
 * @see DmDataItemImpl
 * @see vn.gt.dao.danhmuc.model.DmDataItem
 * @see vn.gt.dao.danhmuc.model.DmDataItemModel
 * @generated
 */
public class DmDataItemModelImpl extends BaseModelImpl<DmDataItem>
	implements DmDataItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dm data item model instance should use the {@link vn.gt.dao.danhmuc.model.DmDataItem} interface instead.
	 */
	public static final String TABLE_NAME = "dm_dataitem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "datagroupid", Types.BIGINT },
			{ "code", Types.VARCHAR },
			{ "node_1", Types.VARCHAR },
			{ "node_2", Types.VARCHAR },
			{ "node_3", Types.VARCHAR },
			{ "node_4", Types.VARCHAR },
			{ "level", Types.INTEGER },
			{ "name", Types.VARCHAR },
			{ "short_name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "validatedfrom", Types.TIMESTAMP },
			{ "validatedto", Types.TIMESTAMP },
			{ "order_", Types.INTEGER },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table dm_dataitem (id LONG not null primary key,datagroupid LONG,code VARCHAR(75) null,node_1 VARCHAR(75) null,node_2 VARCHAR(75) null,node_3 VARCHAR(75) null,node_4 VARCHAR(75) null,level INTEGER,name VARCHAR(75) null,short_name VARCHAR(75) null,description VARCHAR(75) null,validatedfrom DATE null,validatedto DATE null,order_ INTEGER,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table dm_dataitem";
	public static final String ORDER_BY_JPQL = " ORDER BY dmDataItem.Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY dm_dataitem.id ASC";
	public static final String DATA_SOURCE = "gtDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.gt.dao.danhmuc.model.DmDataItem"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.gt.dao.danhmuc.model.DmDataItem"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.gt.dao.danhmuc.model.DmDataItem"),
			true);
	public static long CODE0_COLUMN_BITMASK = 1L;
	public static long DATAGROUPID_COLUMN_BITMASK = 2L;
	public static long LEVEL_COLUMN_BITMASK = 4L;
	public static long NODE1_COLUMN_BITMASK = 8L;
	public static long NODE2_COLUMN_BITMASK = 16L;
	public static long SHORTNAME_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.gt.dao.danhmuc.model.DmDataItem"));

	public DmDataItemModelImpl() {
	}

	public long getPrimaryKey() {
		return _Id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_Id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return DmDataItem.class;
	}

	public String getModelClassName() {
		return DmDataItem.class.getName();
	}

	public long getId() {
		return _Id;
	}

	public void setId(long Id) {
		_columnBitmask = -1L;

		_Id = Id;
	}

	public long getDataGroupId() {
		return _DataGroupId;
	}

	public void setDataGroupId(long DataGroupId) {
		_columnBitmask |= DATAGROUPID_COLUMN_BITMASK;

		if (!_setOriginalDataGroupId) {
			_setOriginalDataGroupId = true;

			_originalDataGroupId = _DataGroupId;
		}

		_DataGroupId = DataGroupId;
	}

	public long getOriginalDataGroupId() {
		return _originalDataGroupId;
	}

	public String getCode0() {
		if (_Code0 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Code0;
		}
	}

	public void setCode0(String Code0) {
		_columnBitmask |= CODE0_COLUMN_BITMASK;

		if (_originalCode0 == null) {
			_originalCode0 = _Code0;
		}

		_Code0 = Code0;
	}

	public String getOriginalCode0() {
		return GetterUtil.getString(_originalCode0);
	}

	public String getNode1() {
		if (_Node1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Node1;
		}
	}

	public void setNode1(String Node1) {
		_columnBitmask |= NODE1_COLUMN_BITMASK;

		if (_originalNode1 == null) {
			_originalNode1 = _Node1;
		}

		_Node1 = Node1;
	}

	public String getOriginalNode1() {
		return GetterUtil.getString(_originalNode1);
	}

	public String getNode2() {
		if (_Node2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Node2;
		}
	}

	public void setNode2(String Node2) {
		_columnBitmask |= NODE2_COLUMN_BITMASK;

		if (_originalNode2 == null) {
			_originalNode2 = _Node2;
		}

		_Node2 = Node2;
	}

	public String getOriginalNode2() {
		return GetterUtil.getString(_originalNode2);
	}

	public String getNode3() {
		if (_Node3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Node3;
		}
	}

	public void setNode3(String Node3) {
		_Node3 = Node3;
	}

	public String getNode4() {
		if (_Node4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _Node4;
		}
	}

	public void setNode4(String Node4) {
		_Node4 = Node4;
	}

	public int getLevel() {
		return _Level;
	}

	public void setLevel(int Level) {
		_columnBitmask |= LEVEL_COLUMN_BITMASK;

		if (!_setOriginalLevel) {
			_setOriginalLevel = true;

			_originalLevel = _Level;
		}

		_Level = Level;
	}

	public int getOriginalLevel() {
		return _originalLevel;
	}

	public String getName() {
		if (_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _Name;
		}
	}

	public void setName(String Name) {
		_Name = Name;
	}

	public String getShortName() {
		if (_ShortName == null) {
			return StringPool.BLANK;
		}
		else {
			return _ShortName;
		}
	}

	public void setShortName(String ShortName) {
		_columnBitmask |= SHORTNAME_COLUMN_BITMASK;

		if (_originalShortName == null) {
			_originalShortName = _ShortName;
		}

		_ShortName = ShortName;
	}

	public String getOriginalShortName() {
		return GetterUtil.getString(_originalShortName);
	}

	public String getDescription() {
		if (_Description == null) {
			return StringPool.BLANK;
		}
		else {
			return _Description;
		}
	}

	public void setDescription(String Description) {
		_Description = Description;
	}

	public Date getValidatedFrom() {
		return _ValidatedFrom;
	}

	public void setValidatedFrom(Date ValidatedFrom) {
		_ValidatedFrom = ValidatedFrom;
	}

	public Date getValidatedTo() {
		return _ValidatedTo;
	}

	public void setValidatedTo(Date ValidatedTo) {
		_ValidatedTo = ValidatedTo;
	}

	public int getOrder() {
		return _Order;
	}

	public void setOrder(int Order) {
		_Order = Order;
	}

	public int getStatus() {
		return _Status;
	}

	public void setStatus(int Status) {
		_Status = Status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public DmDataItem toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (DmDataItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					DmDataItem.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		DmDataItemImpl dmDataItemImpl = new DmDataItemImpl();

		dmDataItemImpl.setId(getId());
		dmDataItemImpl.setDataGroupId(getDataGroupId());
		dmDataItemImpl.setCode0(getCode0());
		dmDataItemImpl.setNode1(getNode1());
		dmDataItemImpl.setNode2(getNode2());
		dmDataItemImpl.setNode3(getNode3());
		dmDataItemImpl.setNode4(getNode4());
		dmDataItemImpl.setLevel(getLevel());
		dmDataItemImpl.setName(getName());
		dmDataItemImpl.setShortName(getShortName());
		dmDataItemImpl.setDescription(getDescription());
		dmDataItemImpl.setValidatedFrom(getValidatedFrom());
		dmDataItemImpl.setValidatedTo(getValidatedTo());
		dmDataItemImpl.setOrder(getOrder());
		dmDataItemImpl.setStatus(getStatus());

		dmDataItemImpl.resetOriginalValues();

		return dmDataItemImpl;
	}

	public int compareTo(DmDataItem dmDataItem) {
		int value = 0;

		if (getId() < dmDataItem.getId()) {
			value = -1;
		}
		else if (getId() > dmDataItem.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		DmDataItem dmDataItem = null;

		try {
			dmDataItem = (DmDataItem)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = dmDataItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DmDataItemModelImpl dmDataItemModelImpl = this;

		dmDataItemModelImpl._originalDataGroupId = dmDataItemModelImpl._DataGroupId;

		dmDataItemModelImpl._setOriginalDataGroupId = false;

		dmDataItemModelImpl._originalCode0 = dmDataItemModelImpl._Code0;

		dmDataItemModelImpl._originalNode1 = dmDataItemModelImpl._Node1;

		dmDataItemModelImpl._originalNode2 = dmDataItemModelImpl._Node2;

		dmDataItemModelImpl._originalLevel = dmDataItemModelImpl._Level;

		dmDataItemModelImpl._setOriginalLevel = false;

		dmDataItemModelImpl._originalShortName = dmDataItemModelImpl._ShortName;

		dmDataItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DmDataItem> toCacheModel() {
		DmDataItemCacheModel dmDataItemCacheModel = new DmDataItemCacheModel();

		dmDataItemCacheModel.Id = getId();

		dmDataItemCacheModel.DataGroupId = getDataGroupId();

		dmDataItemCacheModel.Code0 = getCode0();

		String Code0 = dmDataItemCacheModel.Code0;

		if ((Code0 != null) && (Code0.length() == 0)) {
			dmDataItemCacheModel.Code0 = null;
		}

		dmDataItemCacheModel.Node1 = getNode1();

		String Node1 = dmDataItemCacheModel.Node1;

		if ((Node1 != null) && (Node1.length() == 0)) {
			dmDataItemCacheModel.Node1 = null;
		}

		dmDataItemCacheModel.Node2 = getNode2();

		String Node2 = dmDataItemCacheModel.Node2;

		if ((Node2 != null) && (Node2.length() == 0)) {
			dmDataItemCacheModel.Node2 = null;
		}

		dmDataItemCacheModel.Node3 = getNode3();

		String Node3 = dmDataItemCacheModel.Node3;

		if ((Node3 != null) && (Node3.length() == 0)) {
			dmDataItemCacheModel.Node3 = null;
		}

		dmDataItemCacheModel.Node4 = getNode4();

		String Node4 = dmDataItemCacheModel.Node4;

		if ((Node4 != null) && (Node4.length() == 0)) {
			dmDataItemCacheModel.Node4 = null;
		}

		dmDataItemCacheModel.Level = getLevel();

		dmDataItemCacheModel.Name = getName();

		String Name = dmDataItemCacheModel.Name;

		if ((Name != null) && (Name.length() == 0)) {
			dmDataItemCacheModel.Name = null;
		}

		dmDataItemCacheModel.ShortName = getShortName();

		String ShortName = dmDataItemCacheModel.ShortName;

		if ((ShortName != null) && (ShortName.length() == 0)) {
			dmDataItemCacheModel.ShortName = null;
		}

		dmDataItemCacheModel.Description = getDescription();

		String Description = dmDataItemCacheModel.Description;

		if ((Description != null) && (Description.length() == 0)) {
			dmDataItemCacheModel.Description = null;
		}

		Date ValidatedFrom = getValidatedFrom();

		if (ValidatedFrom != null) {
			dmDataItemCacheModel.ValidatedFrom = ValidatedFrom.getTime();
		}
		else {
			dmDataItemCacheModel.ValidatedFrom = Long.MIN_VALUE;
		}

		Date ValidatedTo = getValidatedTo();

		if (ValidatedTo != null) {
			dmDataItemCacheModel.ValidatedTo = ValidatedTo.getTime();
		}
		else {
			dmDataItemCacheModel.ValidatedTo = Long.MIN_VALUE;
		}

		dmDataItemCacheModel.Order = getOrder();

		dmDataItemCacheModel.Status = getStatus();

		return dmDataItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{Id=");
		sb.append(getId());
		sb.append(", DataGroupId=");
		sb.append(getDataGroupId());
		sb.append(", Code0=");
		sb.append(getCode0());
		sb.append(", Node1=");
		sb.append(getNode1());
		sb.append(", Node2=");
		sb.append(getNode2());
		sb.append(", Node3=");
		sb.append(getNode3());
		sb.append(", Node4=");
		sb.append(getNode4());
		sb.append(", Level=");
		sb.append(getLevel());
		sb.append(", Name=");
		sb.append(getName());
		sb.append(", ShortName=");
		sb.append(getShortName());
		sb.append(", Description=");
		sb.append(getDescription());
		sb.append(", ValidatedFrom=");
		sb.append(getValidatedFrom());
		sb.append(", ValidatedTo=");
		sb.append(getValidatedTo());
		sb.append(", Order=");
		sb.append(getOrder());
		sb.append(", Status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("vn.gt.dao.danhmuc.model.DmDataItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DataGroupId</column-name><column-value><![CDATA[");
		sb.append(getDataGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Code0</column-name><column-value><![CDATA[");
		sb.append(getCode0());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Node1</column-name><column-value><![CDATA[");
		sb.append(getNode1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Node2</column-name><column-value><![CDATA[");
		sb.append(getNode2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Node3</column-name><column-value><![CDATA[");
		sb.append(getNode3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Node4</column-name><column-value><![CDATA[");
		sb.append(getNode4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ShortName</column-name><column-value><![CDATA[");
		sb.append(getShortName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ValidatedFrom</column-name><column-value><![CDATA[");
		sb.append(getValidatedFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ValidatedTo</column-name><column-value><![CDATA[");
		sb.append(getValidatedTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Order</column-name><column-value><![CDATA[");
		sb.append(getOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DmDataItem.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			DmDataItem.class
		};
	private long _Id;
	private long _DataGroupId;
	private long _originalDataGroupId;
	private boolean _setOriginalDataGroupId;
	private String _Code0;
	private String _originalCode0;
	private String _Node1;
	private String _originalNode1;
	private String _Node2;
	private String _originalNode2;
	private String _Node3;
	private String _Node4;
	private int _Level;
	private int _originalLevel;
	private boolean _setOriginalLevel;
	private String _Name;
	private String _ShortName;
	private String _originalShortName;
	private String _Description;
	private Date _ValidatedFrom;
	private Date _ValidatedTo;
	private int _Order;
	private int _Status;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private DmDataItem _escapedModelProxy;
}